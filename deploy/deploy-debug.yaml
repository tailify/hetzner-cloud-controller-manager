---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hetzner-cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: hetzner-cloud-controller-manager
  template:
    metadata:
      labels:
        app: hetzner-cloud-controller-manager
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: hetzner-cloud-controller-manager
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      tolerations:
        # this taint is set by all kubelets running `--cloud-provider=external`
        # so we should tolerate it to schedule the cloud controller manager
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          value: "true"
          effect: "NoSchedule"
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        # cloud controller manages should be able to run on masters
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
        - key: "node.kubernetes.io/not-ready"
          effect: "NoSchedule"
      containers:
        - image: ghcr.io/tailify/hetzner-cloud-controller-manager:v0.0.9
          name: hetzner-cloud-controller-manager
#          command:
#            - "/bin/hcloud-cloud-controller-manager"
#            - "--cloud-provider=hetzner"
#            - "--leader-elect=true"
#            - "--allow-untagged-cloud"
          command:
            - "/bin/dlv"
            - "exec"
            - "/bin/hcloud-cloud-controller-manager"
            - "--listen=:40000"
            - "--headless=true"
            - "--api-version=2"
            - "--accept-multiclient"
            - "--"
            - "--cloud-provider=hetzner"
            - "--leader-elect=false"
            - "--allow-untagged-cloud"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HCLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hetzner-credentials
                  key: token
            - name: HROBOT_USER
              valueFrom:
                secretKeyRef:
                  name: hetzner-credentials
                  key: robot_user
            - name: HROBOT_PASS
              valueFrom:
                secretKeyRef:
                  name: hetzner-credentials
                  key: robot_password
            - name: ANSIBLE_INVENTORY
              value: /config/inventory/hosts
          ports:
            - name: debug
              containerPort: 40000
          volumeMounts:
            - mountPath: /config/inventory
              name: inventory
      volumes:
        - name: inventory
          configMap:
            name: ansible-inventory
---
apiVersion: v1
kind: Service
metadata:
  name: hetzner-cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    app: hetzner-cloud-controller-manager
  type: ClusterIP
  ports:
    - name: debug
      port: 40000
      targetPort: 40000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hetzner-cloud-controller-manager
  namespace: kube-system
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:hetzner-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: hetzner-cloud-controller-manager
    namespace: kube-system
---
# Cluster role for psp usage
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hetzner-cloud-controller-manager
rules:
  - apiGroups:
      - extensions
      - policy
    resourceNames:
      - hetzner-cloud-controller-manager
    resources:
      - podsecuritypolicies
    verbs:
      - use
---

# Cluster role Binding for psp
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hetzner-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hetzner-cloud-controller-manager
subjects:
  - kind: ServiceAccount
    name: hetzner-cloud-controller-manager
    namespace: kube-system